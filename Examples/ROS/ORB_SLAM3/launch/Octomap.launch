<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.03" />
		
		<param name="frame_id" type="string" value="/map" />
		<param name="base_frame_id" type="string" value="/map" />
		
		<param name="sensor_model/max_range" value="20.0" />
		
		<remap from="cloud_in" to="/pointcloud_segmentation/filtered_pointcloud" />
		
		<param name="pointcloud_min_x" type="double" value="-100.0" />
		<param name="pointcloud_max_x" type="double" value="100.0" />

		<param name="pointcloud_min_y" type="double" value="-100.0" />
		<param name="pointcloud_max_y" type="double" value="100.0" />
		<param name="pointcloud_min_z" type="double" value="0.0" />
		<param name="pointcloud_max_z" type="double" value="1.0" />
		<param name="occupancy_min_z" type="double" value="0.0" />
		<param name="occupancy_max_z" type="double" value="30" />
		<param name="height_map" type="bool" value="true" />

		<param name="filter_ground" type="bool" value="true" />
		<param name="ground_filter/distance" type="double" value="0.05" />
		<param name="ground_filter/angle" type="double" value="0.15" />
		<param name="ground_filter/plane_distance" type="double" value="0.7" />


	</node>
</launch>
